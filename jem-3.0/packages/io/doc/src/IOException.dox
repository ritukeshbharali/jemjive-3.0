
/*
 *  Copyright (C) 2019 DRG. All rights reserved.
 *
 *  This file is part of Jem, a general purpose programming toolkit.
 *
 *  Commercial License Usage
 *
 *  This file may be used under the terms of a commercial license
 *  provided with the software, or under the terms contained in a written
 *  agreement between you and DRG. For more information contact DRG at
 *  http://www.dynaflow.com.
 *
 *  GNU Lesser General Public License Usage
 *
 *  Alternatively, this file may be used under the terms of the GNU
 *  Lesser General Public License version 2.1 or version 3 as published
 *  by the Free Software Foundation and appearing in the file
 *  LICENSE.LGPLv21 and LICENSE.LGPLv3 included in the packaging of this
 *  file. Please review the following information to ensure the GNU
 *  Lesser General Public License requirements will be met:
 *  https://www.gnu.org/licenses/lgpl.html and
 *  http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 *
 *  Jem version: 3.0
 *  Date:        Fri 20 Dec 14:27:58 CET 2019
 */


#include <jem/defines.h>


JEM_BEGIN_PACKAGE( io )


//=======================================================================
//   class IOException
//=======================================================================

/*!
  \class IOException IOException.dox jem/io/IOException.h

  \brief %Signals an I/O error.

  The \c IOException class is thrown when an I/O error
  occurs. Well-behaved applications should catch and handle \c
  IOException instances.

*/

class IOException : public Exception
{
 public:
  
/*!

  \brief Constructs an \c IOException instance.

  Constructs an \c IOException instance given a context and message
  string.

  \param place - a string describing the context in which this
  exception was thrown.

  \param msg - a string describing why this exception was thrown.

*/
  
  explicit IOException ( const String& place = "",
                         const String& msg   = "" );


  virtual String name () const;

};



JEM_END_PACKAGE( io )

