
/*
 *  Copyright (C) 2019 DRG. All rights reserved.
 *
 *  This file is part of Jem, a general purpose programming toolkit.
 *
 *  Commercial License Usage
 *
 *  This file may be used under the terms of a commercial license
 *  provided with the software, or under the terms contained in a written
 *  agreement between you and DRG. For more information contact DRG at
 *  http://www.dynaflow.com.
 *
 *  GNU Lesser General Public License Usage
 *
 *  Alternatively, this file may be used under the terms of the GNU
 *  Lesser General Public License version 2.1 or version 3 as published
 *  by the Free Software Foundation and appearing in the file
 *  LICENSE.LGPLv21 and LICENSE.LGPLv3 included in the packaging of this
 *  file. Please review the following information to ensure the GNU
 *  Lesser General Public License requirements will be met:
 *  https://www.gnu.org/licenses/lgpl.html and
 *  http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 *
 *  Jem version: 3.0
 *  Date:        Fri 20 Dec 14:27:58 CET 2019
 */


#include <jem/defines.h>


JEM_BEGIN_PACKAGE( util )


//=======================================================================
//   class PropertyException
//=======================================================================

/*!
  \class PropertyException PropertyException.dox jem/util/PropertyException.h

  \brief %Signals an invalid property.

  A \c PropertyException is thrown if a property can not be found or
  if the value of a property is invalid (wrong type, out of range,
  etc.).

  \sa \c Properties

*/

class PropertyException : public Exception
{
 public:

//-----------------------------------------------------------------------
//   constructor
//-----------------------------------------------------------------------

/*!

  \brief Constructs a \c PropertyException.

  Constructs a \c PropertyException given a context string and an
  error message string.

  \param place - the context in which this exception was thrown.

  \param msg - an error message.

  \post <code>
    this->where() == place && <br>
    this->what()  == msg
  </code>

*/
 
  explicit PropertyException

    ( const String& place = "",
      const String& msg   = "" );
  

  virtual String name () const;

};



JEM_END_PACKAGE( util )
